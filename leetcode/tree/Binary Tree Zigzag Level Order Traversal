// https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal

/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */
var zigzagLevelOrder = function(root) {
    if(!root){
        return []
    }
    const result = []
    const queue = [root]
    let count = 0
    while(queue.length > 0){
        const LENGTH = queue.length
        const temp = []
        for(let i=0; i<LENGTH; i++){
            const node = queue.shift()
            temp.push(node.val)
            if(node.left)
                queue.push(node.left)
            if(node.right)
                queue.push(node.right)
        }
        if(count % 2 == 0){
            result.push(temp)
        }
        else{
            result.push(temp.reverse())
        }
        count++
    }
    return result
};
