// https://leetcode.com/problems/counting-bits
// 내 풀이
/**
 * @param {number} n
 * @return {number[]}
 */
var countBits = function(n) {
    const result = []
    for(let i=0; i<=n; i++){
        const binary = i.toString(2)
        let count = 0
        for(let j=0; j<binary.length; j++){
            if(binary[j] === '1'){
                count++
            }
        }
        result.push(count)
    }
    return result
};

// 다른 사람 풀이
var countBits = function(num) {
    let result = [0];
    
    let mul = 1;
    for(let i = 1, j = 0; i <= num; i++, j++) {
        if(i == mul * 2) {
            mul *= 2;
        }
        
        result[i] = 1 + result[i - mul];
    }
    
    return result;
};
//
1 0001 ==> 1
2 0010 ==> reset the number of 1's to 1
3 0011 ==> 3 = 2 + (3 - 2) => 1 + 1
4 0100 ==> reset the number of 1's to 1
5 0101 ==> 5 = 4 + (5 - 4) => the 1 + 1
6 0110 ==> 6 = 4 + (6 - 4) => 1 + 1
7 0111 ==> 7 = 4 + (7 - 4) => 1 + 2
...
Or another ways to think this algo is:
7 = 4 + 3 ==> the number of 1's for 7 is the number of 1's for 3 plus 1 (because of 4)
//
