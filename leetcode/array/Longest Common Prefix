// 2022
/**
 * @param {string[]} strs
 * @return {string}
 */
var longestCommonPrefix = function(strs) {
    if(strs[0].length == 0){
        return ''
    }
    let str = ''
    let char = ""
    for(let i=0; i<strs[0].length; i++){
        char = strs[0][i]
        for(let j=0; j<strs.length; j++){
            if(strs[j][i] == char){
               continue
            }
            else{
                return str
            }
        }
        str += char 
    }
    return str
};

// 20230512
// /**
//  * @param {string[]} strs
//  * @return {string}
//  */
// var longestCommonPrefix = function(strs) {
//     if(strs.length === 1){
//         return strs[0]
//     }

//     let prefix = ''
//     let findDiff = false

//     for(let i = 0; i < strs[0].length; i++){
//         if(findDiff){
//                 break;
//         }
//         prefix += strs[0][i]
//         for(let j = 0; j < strs.length; j++){
//             if(strs[j].slice(0, i + 1) !== prefix){
//                 findDiff = true
//                 break;
//             }
//         }
//     }

//     return findDiff ? prefix.slice(0, -1) : prefix
// };



// 정답 
/**
 * @param {string[]} strs
 * @return {string}
 */
var longestCommonPrefix = function(strs) {

    // Return early on empty input
    if (!strs.length) return '';

    // Loop through the letters of the first string
    for (let i = 0; i <= strs[0].length; i++) {
        console.log(strs)
        // Loop through the other strings
        for (let j = 1; j < strs.length; j++) {
            // Check if this character is also present in the same position of each string
            if (strs[0][i] !== strs[j][i]) {
                // If not, return the string up to and including the previous character
                return strs[0].slice(0, i);
            }
        }
    }

    return strs[0];
    
};
