// https://leetcode.com/problems/minimum-absolute-difference-in-bst
/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
 
// 시간 초과에 유의하여 검색 알고리즘을 짤 것
// 2중 for문 돌렸더니 시간 초과 나옴
var getMinimumDifference = function(root) {
    const r = []
    traversal(root, r)
    function traversal(p, r){
        if(!p)
            return;
        r.push(p.val)
        traversal(p.left, r)
        traversal(p.right, r)
    }
    r.sort((a,b) => a-b)
    let min = Infinity
    for(let i=0; i<r.length-1; i++){
        if(r[i+1] - r[i] < min){
            min = r[i+1] - r[i]
        }
    }
    return min
};
