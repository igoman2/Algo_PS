// https://leetcode.com/problems/n-ary-tree-postorder-traversal
/**
 * // Definition for a Node.
 * function Node(val,children) {
 *    this.val = val;
 *    this.children = children;
 * };
 */

/**
 * @param {Node|null} root
 * @return {number[]}
 */
// dfs
var postorder = function(root) {
    const result = []
    function dfs(p){
        if(!p)
            return;
        for(const n of p.children){
            dfs(n)
        }
        result.push(p.val)
    }
    dfs(root)
    return result
};

// bfs
var postorder = function(root) {
    if(!root)
        return []
    const result = []
    const queue = [root]
    while(queue.length > 0){
        const current = queue.pop()
        result.push(current.val)
        const children = current.children
        for(let i=0; i<children.length; i++){
            queue.push(children[i])
        }
    }
    return result.reverse()
};

