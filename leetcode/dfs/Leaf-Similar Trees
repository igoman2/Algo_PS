// https://leetcode.com/problems/leaf-similar-trees
/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root1
 * @param {TreeNode} root2
 * @return {boolean}
 */
var leafSimilar = function(root1, root2) {
    let arr1 = []
    let arr2 = []
    function dfs(p, arr){
        if(!p)
            return ;
        const left = dfs(p.left, arr)
        const right = dfs(p.right, arr)
        if(!left && !right){
            arr.push(p.val)
        }
        return p
    }
    dfs(root1, arr1)
    dfs(root2, arr2)
    
    if(arr1.length !== arr2.length){
        return false
    }
    for(let i=0; i<arr1.length; i++){
        if(arr1[i] !== arr2[i]){
            return false
        }
    }
    return true
};
