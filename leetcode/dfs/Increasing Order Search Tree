// https://leetcode.com/problems/increasing-order-search-tree/submissions
/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {TreeNode}
 */
var increasingBST = function(root) {
    const nodes = []
    function inorder(p){
        if(!p)
            return;
        inorder(p.left)
        nodes.push(p.val)
        inorder(p.right)
    }
    inorder(root)
    const result = new TreeNode(-Infinity)
    createRightBST(result, nodes)
    
    return result;
};

var createRightBST = function(root, inorder) {
    for(var i = 0; i < inorder.length; ++ i) {
        root.val = inorder[i];
        if (i + 1 < inorder.length) {
            root.right = root.right || new TreeNode(0);
            root = root.right;
        }
    }
}
