// https://leetcode.com/problems/minimum-distance-between-bst-nodes
/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var minDiffInBST = function(root) {
    const nodes = []
    function dfs(p){
        if(!p)
            return;
        dfs(p.left)
        dfs(p.right)
        nodes.push(p.val)
    }
    dfs(root)
    nodes.sort((a,b) => a-b)
    let min = Infinity
    for(let i=0; i<nodes.length-1; i++){
        if(nodes[i+1] - nodes[i] < min)
            min = nodes[i+1] - nodes[i]
    }
    return min
};
