// https://leetcode.com/problems/univalued-binary-tree
/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {boolean}
 */
 
// dfs	
var isUnivalTree = function(root) {
    const set = new Set()
    function dfs(p){
        if(!p)
            return ;
        dfs(p.left)
        dfs(p.right)
        set.add(p.val)
    }
    dfs(root)
    return set.size == 1 ? true : false
};

// bfs
var isUnivalTree = function(root) {
    const queue = [root]
    const rootVal = root.val
    while(queue.length > 0){
        const current = queue.shift()
        if(current.val !== rootVal)
            return false
        if(current.left){
            queue.push(current.left)
        }
        if(current.right){
            queue.push(current.right)
        }
    }
    return true
};
