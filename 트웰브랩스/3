import React, { useState } from 'react';
import './Rating.css';

const RATE = [1,2,3,4,5]
const ALLOWED_KEYCODE=['1','2','3','4','5','49','50','51','52','53']
const HALF_FILLED_ICON = '/icons/stars/half.svg'
const FILLEDICON = '/icons/stars/filled.svg'
const EMPTY_ICON = '/icons/stars/empty.svg'

const Rating = ({value, halfFilledIcon = HALF_FILLED_ICON, filledIcon = FILLEDICON, emptyIcon = EMPTY_ICON, steps = 1}) => {
    const [ratingValue, setRatingValue] = useState(value || 0)
    const [clickedValue, setClickedValue] = useState(null)

    const handleMouseEnter = (index) => {
        setRatingValue(index)
    }

    const handleMouseLeave = () => {
        if(clickedValue){
            setRatingValue(clickedValue)
        }
        else {
            setRatingValue(null)
        }
        setClickedValue(null)
    }

    const getIcon = (index) => {
        if(steps === 1){
            if(index <= ratingValue){
                return filledIcon
            }
            else{
                return emptyIcon
            }
        }
        else {
            if(index - 0.5 === ratingValue){
                return halfFilledIcon
            }
            else if(index <= ratingValue){
                return filledIcon
            }
            else{
                return emptyIcon
            }
        }
    }
    
    const handleMouseMove = (event, index) => {
        if(event.target.tagName !== 'IMG'){
            return
        }

        if(steps === 0.5 && getMousePosition(event) < event.target.offsetWidth / 2){
            setRatingValue(index - 0.5)
        }
        else{
            setRatingValue(index)
        }
    }

    const handleKeyDown = (event) => {
        let newValue = ratingValue

        if(event.key === 'ArrowRight'){
            newValue = Math.min(ratingValue + steps, 5)
        }
        else if(event.key === 'ArrowLeft'){
            if(ratingValue <= 1){
                newValue = 0
            }
            else{
                newValue = Math.max(ratingValue - steps, steps)
            }

        }
        else if(ALLOWED_KEYCODE.includes(event.key)){
            newValue = Number(event.key)
        }

        if(newValue !== ratingValue){
            setRatingValue(newValue)
        }
    }

    const handleClick = (index) => {
        setClickedValue(index)
    }

    const getMousePosition = (event) => {
        const rect = event.target.getBoundingClientRect()
        const xPos = event.clientX - rect.left
        return xPos
    }



    const renderSymbol = () => {
        return (
            RATE.map((index) => (
                <img src={getIcon(index)}
                key={`rate-${index}`}
                className="rating-image"
                onMouseMove={(e)=>handleMouseMove(e, index)}
                onMouseEnter={()=>handleMouseEnter(index)}
                onMouseLeave={handleMouseLeave}
                onClick={()=>handleClick(index)}
                data-testid="rating-icon"
                alt="Rate"/>
            ))
        )
    }

    return (
        <div
            tabIndex="0"
            className="star-rating"
            data-testid="star-rating-container"
            onKeyDown={handleKeyDown}
        >
            {
                renderSymbol()
            }
        </div>
    )
};


export default Rating;
